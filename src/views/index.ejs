<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>TwitchBot Control Panel</title>
    <link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/styles/styles.css" rel="stylesheet">
    <link href="/styles/index.css" rel="stylesheet">
  </head>
  <body>
    <div class="container">
      <div class="row">
        <!-- Connection status -->
        <div class="col-md-6">
          <div class="bot-functional-container">
            <div class="bot-functional-container-header">
              <label class="container-name-label">Status</label>
            </div>
            <div class="bot-functional-container-body">
              <div class="row">
                <div class="col-auto">
                  <p class="bot-functional-container-text text-connection-status-not-connected" id="server-connection-status">No connection</p>
                  <p class="bot-functional-container-text" id="server-status-message">##No data##</p>
                </div>
              </div>
              <div class="row">
                <div class="col-auto">
                  <input type="checkbox" class="btn-check" id="update-status-checkbox" autocomplete="off" onclick="doCheckServerStatus()">
                  <label class="btn btn-outline-primary" for="update-status-checkbox">Autorefresh</label>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="col-md-6">
          <!-- Commands -->
          <div class="bot-functional-container">
            <div class="bot-functional-container-header">
              <label class="container-name-label">Active commands</label>
            </div>
            <div class="bot-functional-container-body">
              <div class="gap-2 btn-group bot-functional-container-button-box" role="group">
                <input type="checkbox" class="btn-check" id="mira-muted-checkbox" autocomplete="off" onclick="sendMiraMute()">
                <label class="btn btn-outline-primary" for="mira-muted-checkbox">Mira</label>

                <input type="checkbox" class="btn-check" id="ben-muted-checkbox" autocomplete="off" onclick="sendBenMute()">
                <label class="btn btn-outline-primary" for="ben-muted-checkbox">Ben</label>

                <input type="checkbox" class="btn-check" id="iq-muted-checkbox" autocomplete="off" onclick="sendIqMute()">
                <label class="btn btn-outline-primary" for="iq-muted-checkbox">Iq</label>
              </div>
            </div>
          </div>

          <!-- System commands -->
          <div class="bot-functional-container">
            <div class="bot-functional-container-header">
              <label class="container-name-label">System</label>
            </div>
            <div class="bot-functional-container-body bot-functional-container-button-box">
              <div class="row">
                <div class="col-auto">
                  <button type="button" class="btn btn-danger" onclick="sendRestartCommand()">Restart</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <br>

      <!-- Channel commands -->
      <div class="bot-functional-container container">
        <div class="bot-functional-container-header">
          <label class="container-name-label">Bot management</label>
        </div>
        <div class="d-grid gap-2 bot-functional-container-body">
          <div class="d-grid gap-2 d-md-flex justify-content-md-center">
            <div class="d-grid gap-2 col-12 col-md-6">
              <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#add-channel-popup">Add channel</button>
              <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#remove-channel-popup">Remove channel</button>
            </div>
            <div class="d-grid gap-2 col-12 col-md-6">
              <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#leave-channel-popup">Leave channel</button>
              <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#join-channel-popup">Join channel</button>
            </div>
          </div>
          <div class="d-grid gap-2 d-md-flex justify-content-md-center">
            <div class="d-grid col-12">
              <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#set-permission-popup">Set permission</button>
            </div>
          </div>
        </div>
      </div>

      <br>

      <!-- Custom message -->
      <div class="bot-functional-container">
        <div class="bot-functional-container-header">
          <label class="container-name-label">Send custom message</label>
        </div>
        <div class="bot-functional-container-body">
          <div class="col-lg-2">
            <input class="text-field" type="text" id="custom-message-channel" placeholder="Channel name" spellcheck="false">
          </div>
          <br>
          <div class="col-lg-8">
            <input class="text-field" type="text" id="custom-message-text" placeholder="Message..." spellcheck="false">
          </div>
          <br>
          <div class="col-lg-2">
            <button type="button" class="btn btn-primary" id="send-custom-message" onclick="sendCustomMessage()">Send</button>
          </div>
        </div>
      </div>

      <br>

      <p>
        <a
          class="btn btn-primary"
          data-bs-toggle="collapse"
          href="#config-collapse-content"
          aria-expanded="false"
          aria-controls="config-collapse-content"
        >
          Config
        </a>
        <a
          class="btn btn-primary"
          data-bs-toggle="collapse"
          href="#filters-collapse-content"
          aria-expanded="false"
          aria-controls="filters-collapse-content"
        >
          Filters
        </a>
      </p>

      <div class="col-lg-12">
        <div class="collapse" id="config-collapse-content">
          <div class="bot-functional-container">
            <div class="bot-functional-container-header">
              <label class="container-name-label">Config</label>
            </div>
            <div class="bot-functional-container-body">
              <textarea class="text-field" id="config-textarea" spellcheck="false" rows="25">Empty</textarea>
              <br>
              <button type="button" id="btn-save-config" class="btn btn-primary" onclick="sendConfigToServer()">Save config</button>
            </div>
          </div>
        </div>
      </div>

      <br>

      <div class="col-lg-12">
        <div class="collapse" id="filters-collapse-content">
          <div class="bot-functional-container">
            <div class="bot-functional-container-header">
              <label class="container-name-label">Filters</label>
            </div>
            <div class="bot-functional-container-body">
              <textarea class="text-field" id="filters-textarea" spellcheck="false" rows="25">Empty</textarea>
              <br>
              <button type="button" id="btn-save-filters" class="btn btn-primary" onclick="sendFiltersToServer()">Save filters</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Add channel / Remove channel popups -->
      <div class="modal fade" id="add-channel-popup" tabindex="-1" aria-labelledby="add-channel-popup-label" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="add-channel-popup-label">Add channel</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="row">
                <label for="add-channel-input" class="col-form-label">Channel name:</label>
                <div class="col-lg">
                  <input type="text" class="form-control" id="add-channel-input" name="add-channel-input">
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="sendAddChannel()">Ok</button>
            </div>
          </div>
        </div>
      </div>
      <div class="modal fade" id="remove-channel-popup" tabindex="-1" aria-labelledby="remove-channel-popup-label" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="remove-channel-popup-label">Remove channel</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="row">
                <label for="remove-channel-input" class="col-form-label">Channel name:</label>
                <div class="col-lg">
                  <input type="text" class="form-control" id="remove-channel-input" name="remove-channel-input">
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="sendRemoveChannel()">Ok</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Join channel / Leave channel popups -->
      <div class="modal fade" id="join-channel-popup" tabindex="-1" aria-labelledby="join-channel-popup-label" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="join-channel-popup-label">Join to channel</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="row">
                <label for="join-channel-input" class="col-form-label">Channel name:</label>
                <div class="col-lg">
                  <input type="text" class="form-control" id="join-channel-input" name="join-channel-input">
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="sendJoinChannel()">Ok</button>
            </div>
          </div>
        </div>
      </div>
      <div class="modal fade" id="leave-channel-popup" tabindex="-1" aria-labelledby="leave-channel-popup-label" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="leave-channel-popup-label">Leave from channel</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="row">
                <label for="leave-channel-input" class="col-form-label">Channel name:</label>
                <div class="col-lg">
                  <input type="text" class="form-control" id="leave-channel-input" name="leave-channel-input">
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="sendLeaveChannel()">Ok</button>
            </div>
          </div>
        </div>
      </div>

      <!-- Set permission popup -->
      <div class="modal fade" id="set-permission-popup" tabindex="-1" aria-labelledby="set-permission-popup-label" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="set-permission-popup-label">Set user permission</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <div class="row">
                <label for="set-permission-input" class="col-form-label">User name:</label>
                <div class="col-lg">
                  <input type="text" class="form-control" id="set-permission-input" name="set-permission-input">
                </div>
              </div>
              <div class="row">
                <label for="set-permission-level-input" class="col-form-label">Level:</label>
                <div class="col-lg">
                  <input type="text" class="form-control" id="set-permission-level-input" name="set-permission-level-input">
                </div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
              <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="sendSetPermission()">Ok</button>
            </div>
          </div>
        </div>
      </div>

    </div>
  </body>
  <script src="/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script>
    const CHECK_STATUS_INTERVAL = 5000;
    const RECONNECTION_INTERVAL = 5000;
    const server = JSON.parse('<%- JSON.stringify(server) %>');

    const connection_status_text = document.querySelector("#server-connection-status");
    const server_status_message_text = document.querySelector("#server-status-message");

    const mira_muted_checkbox = document.querySelector("#mira-muted-checkbox");
    const ben_muted_checkbox = document.querySelector("#ben-muted-checkbox");
    const iq_muted_checkbox = document.querySelector("#iq-muted-checkbox");
    const autorefresh_status_checkbox = document.querySelector("#update-status-checkbox");

    const add_channel_input = document.querySelector("#add-channel-input");
    const remove_channel_input = document.querySelector("#remove-channel-input");
    const join_channel_input = document.querySelector("#join-channel-input");
    const leave_channel_input = document.querySelector("#leave-channel-input");

    const set_permission_input = document.querySelector("#set-permission-input");
    const set_permission_level_input = document.querySelector("#set-permission-level-input");

    const custom_message_channel_input = document.querySelector("#custom-message-channel");
    const custom_message_text_input = document.querySelector("#custom-message-text");

    const config_textarea = document.querySelector("#config-textarea");
    const filters_textarea = document.querySelector("#filters-textarea");
    const config_collapse_content = document.querySelector("#config-collapse-content");
    const filters_collapse_content = document.querySelector("#filters-collapse-content");

    let is_connected = false;
    const ws = new WebSocket(`ws://${server.host}:${server.port}`);

    config_collapse_content.addEventListener("show.bs.collapse", () => {
      ws.send("#requestconfig");
    });

    filters_collapse_content.addEventListener("show.bs.collapse", () => {
      ws.send("#requestfilters");
    });

    function doCheckServerStatus()
    {
      if (autorefresh_status_checkbox.checked)
      {
        if (is_connected)
        {
          setTextStatusConnected();
          sendRequestStatus();
        }
        else
        {
          setTextStatusNotConnected();
        }
        setTimeout(doCheckServerStatus, CHECK_STATUS_INTERVAL);
      }
    }

    function setTextStatusConnected()
    {
      connection_status_text.innerHTML = "Connected";
      connection_status_text.classList.add("text-connection-status-connected");
      connection_status_text.classList.remove("text-connection-status-not-connected");
    }

    function setTextStatusNotConnected()
    {
      connection_status_text.innerHTML = "No connection";
      connection_status_text.classList.add("text-connection-status-not-connected");
      connection_status_text.classList.remove("text-connection-status-connected");
      server_status_message_text.innerHTML = "##No data##";
    }

    ws.onopen = (event) =>
    {
      is_connected = true;

      setTextStatusConnected();
      sendRequestMuteState();
      sendRequestStatus();
    };

    ws.onclose = (event) =>
    {
      is_connected = false;
      setTextStatusNotConnected();
    };

    ws.onmessage = (event) =>
    {
      const message = event.data;

      if (message.startsWith("#"))
      {
        const data = message.split("///");
        const cmd = data[0].replace("#", "");

        if (cmd === "status")
        {
          server_status_message_text.innerHTML = data[1];
        }
        else if (cmd === "mutestate")
        {
          mira_muted_checkbox.checked = data[1] !== "true";
          ben_muted_checkbox.checked = data[2] !== "true";
          iq_muted_checkbox.checked = data[3] !== "true";
        }
        else if (cmd === "config")
        {
          config_textarea.value = data[1];
        }
        else if (cmd == "filters")
        {
          filters_textarea.value = data[1];
        }
      }
    };

    function sendRequestStatus()    { ws.send("#requeststatus"); }
    function sendRequestMuteState() { ws.send("#requestmutestate"); }

    function sendMiraMute() { ws.send(`/mute###mira###${!mira_muted_checkbox.checked}`); }
    function sendBenMute()  { ws.send(`/mute###ben###${!ben_muted_checkbox.checked}`); }
    function sendIqMute()   { ws.send(`/mute###iq###${!iq_muted_checkbox.checked}`); }

    function sendAddChannel()     { ws.send(`/addchannel###${add_channel_input.value}`); }
    function sendRemoveChannel()  { ws.send(`/rmchannel###${remove_channel_input.value}`); }

    function sendJoinChannel()  { ws.send(`/join###${join_channel_input.value}`); }
    function sendLeaveChannel() { ws.send(`/leave###${leave_channel_input.value}`); }

    function sendRestartCommand() { ws.send("/restart"); }

    function sendCustomMessage()
    {
      const channel_name = custom_message_channel_input.value;
      const message_content = custom_message_text_input.value;
      custom_message_text_input.value = "";
      ws.send(`/sendmessage###${channel_name}###${message_content}`);
    }

    function sendConfigToServer()
    {
      try
      {
        const content = config_textarea.value;
        if (content && content !== "" && content !== "Empty")
        {
          const json_data = JSON.stringify(JSON.parse(content));
          ws.send(`/updateconfig###${content}`);
        }
      }
      catch (error)
      {
        console.error("Error while sending config: " + error.message);
      }
    }

    function sendFiltersToServer()
    {
      try
      {
        const content = filters_textarea.value;
        if (content && content !== "" && content !== "Empty")
        {
          const json_data = JSON.stringify(JSON.parse(content));
          ws.send(`/updatefilters###${json_data}`);
        }
      }
      catch (error)
      {
        console.error("Error while sending filters: " + error.message);
      }
    }

    function sendSetPermission()
    {
      const target_user_name = set_permission_input.value;
      const target_level = set_permission_level_input.value;

      if (target_user_name !== "" && target_level !== "")
      {
        ws.send(`/setpermission###${target_user_name}###${target_level}`);
      }
    }
  </script>
</html>